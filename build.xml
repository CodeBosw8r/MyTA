<?xml version="1.0" encoding="UTF-8"?>
<project default="war" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="module.name" value="MyTA" />
    <property name="ivy.jar">build/ivy.jar</property>
    <property name="ivy.version">2.4.0</property>
    <property name="lib.dir">build/lib</property>

    <path id="ivy.path">
        <fileset file="${ivy.jar}"/>
    </path>

    <fail message="Ant 1.10.4+ is required!">
        <condition>
            <not>
                <antversion atleast="1.10.4" />
            </not>
        </condition>
    </fail>

    <target name="init">

        <xmlproperty file="ivy.xml" collapseAttributes="true" />
        <property name="module.version" value="${ivy-module.info.revision}" />

        <mkdir dir="build" />

    </target>

    <!-- Bootstrap ivy -->
    <target name="ivy.bootstrap" depends="ivy.download">

        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.path" />

    </target>

    <target name="ivy.check">
        <available file="${ivy.jar}" property="ivy.present" />
    </target>

    <target name="ivy.download" depends="ivy.check" unless="ivy.present">
        <property name="composer.noselfupdate" value="true" />

        <!-- Create directory if not exists -->
        <mkdir dir="${user.home}/.ant/lib" />

        <!-- Download it -->
        <echo message="Downloading Apache Ivy..." />
        <get dest="${ivy.jar}" src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" />

    </target>

    <target name="retrieve" depends="init,ivy.bootstrap">
        <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]" conf="*" type="jar,bundle" sync="true" />
        <path id="build.classpath">
            <fileset dir="${lib.dir}/build">
                <include name="*.jar" />
            </fileset>
        </path>
    </target>

    <target name="compile" depends="init,retrieve">

        <!-- build main classes -->
        <mkdir dir="build/classes" />
        <javac srcdir="src/main/java" destdir="build/classes" classpathref="build.classpath" includeantruntime="false">
            <compilerarg value="-Xlint:-path" />
        </javac>

        <!-- build test classes -->
        <mkdir dir="build/tests" />
        <javac srcdir="src/test/java" destdir="build/tests" includeantruntime="false">
            <compilerarg value="-Xlint:-path" />

            <classpath>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
                <path location="build/classes" />
            </classpath>
        </javac>

    </target>

    <target name="build" depends="init,retrieve,compile">

        <!-- copy non-java resources from src to build -->
        <!-- <copy todir="build/bin"> <fileset dir="src" casesensitive="yes"> <exclude name="**/*.java"/> </fileset> </copy> -->

    </target>


    <!-- https://junit.org/junit5/docs/snapshot/user-guide/#running-tests-build-ant -->
    <target name="test.junit.launcher" depends="compile">

        <mkdir dir="build/test-report" />
    	
    	  <path id="test.classpath">
    	        <pathelement path="build/test"/>
    	        <pathelement path="build/main"/>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
    	    </path>
    	

        <junitlauncher>
            <classpath refid="test.classpath"/>
            <testclasses outputdir="build/test-report">
                <fileset dir="build/test">
                    <include name="**/*Tests.class"/>
                </fileset>
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
                <listener type="legacy-plain" sendSysOut="true" />
            </testclasses>
        </junitlauncher>
    	

    </target>

    <!-- https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher -->
    <target name="test.console.launcher" depends="compile">
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
            </classpath>
            <arg value="--scan-classpath" />
            <arg line="--reports-dir build/test-report" />
        </java>
        <junitreport todir="build/test-report">
            <fileset dir="build/test-report">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="build/test-report/html" />
        </junitreport>
    </target>

    <target name="test" depends="test.junit.launcher, test.console.launcher" />

    <target name="war" depends="compile,test">
        <delete file="build/dist/MyTA.war" />
        <war destfile="build/dist/MyTA.war" webxml="src/main/webapp/WEB-INF/web.xml">
            <!-- <fileset dir="src/main/webapp/WebContent"/> -->
            <lib dir="${lib.dir}/run" />
            <classes dir="build/classes" />
        </war>
    </target>

</project>
