<?xml version="1.0" encoding="UTF-8"?>
<project default="war" xmlns:ivy="antlib:org.apache.ivy.ant">

	<taskdef name="xpath" classname="net.uworks.andariel.XPath" />
	<property name="module.name" value="MyTA" />
	
    <fail message="Ant 1.10.4+ is required!">
        <condition>
            <not>
                <antversion atleast="1.10.4"/>
            </not>
        </condition>
    </fail>	

	<target name="init">
		
		<xpath file="ivy.xml" expression="//info/@revision" outputproperty="module.version" />
		<mkdir dir="build" />
		<property name="lib.dir" value="build/lib" />

	</target>

	<target name="retrieve" depends="init">
		<ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision].[ext]" conf="*" type="jar" />
		<path id="build.classpath">
			<fileset dir="${lib.dir}/build">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>

	<target name="compile" depends="init,retrieve">
		
		<!-- build main classes -->
		<mkdir dir="build/classes" />
		<javac srcdir="src/main/java" destdir="build/classes" classpathref="build.classpath" includeantruntime="false">
			<compilerarg value="-Xlint"/>
		</javac>

		<!-- build test classes -->
        <mkdir dir="build/tests" />
        <javac srcdir="src/test/java" destdir="build/tests" includeantruntime="false">
            <compilerarg value="-Xlint"/>
        	
            <classpath>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
                 <path location="build/classes"/>
             </classpath>
        </javac>

	</target>
	
	<target name="build" depends="init,retrieve,compile">
		
		<!-- copy non-java resources from src to build -->
		<!--
		<copy todir="build/bin">
			<fileset dir="src" casesensitive="yes">
			  <exclude name="**/*.java"/>
			</fileset>
		</copy>
		-->
		
	</target>


    <!-- https://junit.org/junit5/docs/snapshot/user-guide/#running-tests-build-ant -->
    <target name="test.junit.launcher" depends="compile">
    	
        <mkdir dir="build/test-report" />

        <junitlauncher haltOnFailure="false" printSummary="true">
            <classpath>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
                <path location="build/classes" />
            </classpath>
            <testclasses outputdir="build/test-report">
                <fileset dir="build/tests">
                    <include name="**/*.class"/>
                </fileset>
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
                <listener type="legacy-plain" sendSysOut="true" />
            </testclasses>
        </junitlauncher>
    </target>

    <!-- https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher -->
    <target name="test.console.launcher" depends="compile">
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath>
                <fileset dir="${lib.dir}/test">
                    <include name="*.jar" />
                </fileset>
            </classpath>
            <arg value="--scan-classpath"/>
            <arg line="--reports-dir build/test-report"/>
        </java>
        <junitreport todir="build/test-report">
            <fileset dir="build/test-report">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="build/test-report/html"/>
        </junitreport>
    </target>

    <target name="test" depends="test.junit.launcher, test.console.launcher" />
	
    <target name="war" depends="compile,test">
        <war destfile="build/dist/MyTA.war" webxml="src/main/webapp/WEB-INF/web.xml">
        	<!--
            <fileset dir="src/main/webapp/WebContent"/>
            -->
            <lib dir="${lib.dir}/run"/>
            <classes dir="build/classes"/>
        </war>
    </target>

	<target name="publish" depends="init,war">
		<ivy:publish resolver="local" deliverivypattern="dist/[artifact]-[revision].[ext]" artifactspattern="dist/grip-[module]-[revision].[ext]" pubrevision="${module.version}">
		</ivy:publish>
	</target>

</project>
